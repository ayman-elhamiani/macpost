{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/aymen/Desktop/macpost/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aymen/Desktop/macpost/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport SocialNetwork from '../abis/SocialNetwork.json';\nimport Navbar from './Navbar';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchaindata();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() //connect metamask\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() //\n\n  }, {\n    key: \"loadBlockchaindata\",\n    value: function () {\n      var _loadBlockchaindata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.web3;\n\n              case 2:\n                web3 = _context3.sent;\n                _context3.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchaindata() {\n        return _loadBlockchaindata.apply(this, arguments);\n      }\n\n      return loadBlockchaindata;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","Web3","Identicon","SocialNetwork","Navbar","App","loadWeb3","loadBlockchaindata","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","props","state"],"sources":["/Users/aymen/Desktop/macpost/src/components/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport SocialNetwork from '../abis/SocialNetwork.json'\nimport Navbar from './Navbar'\n\n\nclass App extends Component {\n\n    async componentWillMount(){\n            await this.loadWeb3()\n           await this.loadBlockchaindata()\n    }\n\n//connect metamask\n    async loadWeb3() {\n        if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n        }\n        else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n//\n    async loadBlockchaindata(){\n       const web3 = await window.web3\n       const accounts = await web3.eth.getAccounts()\n       this.setState({account: accounts[0]})\n          \n    }\n\n    constructor (props){\n          super(props)\n          this.state = {\n            account :'',\n        }\n    }\n\n  render() {\n\n    return (\n      <div>\n        <Navbar account = {this.state.account}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAGMC,G;;;;;;;;;;;;uBAGY,KAAKC,QAAL,E;;;;uBACD,KAAKC,kBAAL,E;;;;;;;;;;;;;;;QAGjB;;;;;;;;;;qBAEYC,MAAM,CAACC,Q;;;;;gBACTD,MAAM,CAACE,IAAP,GAAc,IAAIT,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;gBAEH,IAAIH,MAAM,CAACE,IAAX,EAAiB;kBACpBF,MAAM,CAACE,IAAP,GAAc,IAAIT,IAAJ,CAASO,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;gBACD,CAFI,MAGA;kBACHJ,MAAM,CAACK,KAAP,CAAa,qEAAb;gBACD;;;;;;;;;;;;;;;QAET;;;;;;;;;;;;uBAE0BL,MAAM,CAACE,I;;;gBAApBA,I;;uBACiBA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;gBAAjBC,Q;gBACN,KAAKC,QAAL,CAAc;kBAACC,OAAO,EAAEF,QAAQ,CAAC,CAAD;gBAAlB,CAAd;;;;;;;;;;;;;;;;;;EAIH,aAAaG,KAAb,EAAmB;IAAA;;IAAA;;IACb,yEAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXF,OAAO,EAAE;IADE,CAAb;IAFa;EAKlB;;;;6BAEM;MAEP,oBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD;QAAQ,OAAO,EAAI,KAAKE,KAAL,CAAWF,OAA9B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CADF;IAMD;;;;EA3CelB,S;;AA8ClB,eAAeK,GAAf"},"metadata":{},"sourceType":"module"}